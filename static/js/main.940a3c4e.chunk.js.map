{"version":3,"sources":["components/TodoItem/TodoItem.tsx","components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","api.ts","App.tsx","components/TodoModal/TodoModal.tsx","index.tsx"],"names":["TodoItem","todo","selectedTodo","onSelect","isTodoSelected","id","className","classNames","completed","title","type","onClick","TodoList","todos","map","TodoFilter","options","filter","searchValue","onChange","value","e","target","option","placeholder","event","style","pointerEvents","Loader","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","StateOfAffairs","TodoModal","useState","user","setUser","userId","useEffect","getUser","href","email","name","filterOptions","App","todosFromServer","setTodosFromServer","setSelectedTodo","setFilter","setSearchValue","isLoading","setIsLoading","fetchData","a","getVisibleTodos","useMemo","validValue","toLowerCase","trimStart","normalizeTitle","item","includes","Active","Completed","length","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.940a3c4e.chunk.js","sourcesContent":["import { FC } from 'react';\nimport classNames from 'classnames';\n\nimport { Todo } from '../../types/Todo';\n\ninterface Props {\n  todo: Todo;\n  selectedTodo: Todo | null;\n  onSelect: (value: Todo | null) => void;\n}\n\nexport const TodoItem: FC<Props> = ({\n  todo,\n  selectedTodo,\n  onSelect,\n}) => {\n  const isTodoSelected = selectedTodo && selectedTodo.id === todo.id;\n\n  return (\n    <tr\n      data-cy=\"todo\"\n      className={classNames({\n        'has-background-info-light': isTodoSelected,\n      })}\n      key={todo.id}\n    >\n      <td className=\"is-vcentered\">{todo.id}</td>\n      <td className=\"is-vcentered\">\n        {todo.completed && (\n          <span className=\"icon\" data-cy=\"iconCompleted\">\n            <i className=\"fas fa-check\" />\n          </span>\n        )}\n      </td>\n      <td className=\"is-vcentered is-expanded\">\n        <p\n          className={classNames({\n            'has-text-success': todo.completed,\n            'has-text-danger': !todo.completed,\n          })}\n        >\n          {todo.title}\n        </p>\n      </td>\n      <td className=\"has-text-right is-vcentered\">\n        <button\n          data-cy=\"selectButton\"\n          className=\"button\"\n          type=\"button\"\n          onClick={() => {\n            onSelect(todo);\n          }}\n        >\n          <span className=\"icon\">\n            <i\n              className={classNames('far', {\n                'fa-eye-slash': isTodoSelected,\n                'fa-eye': !isTodoSelected,\n              })}\n            />\n          </span>\n        </button>\n      </td>\n    </tr>\n  );\n};\n","import { FC } from 'react';\nimport { TodoItem } from '../TodoItem';\nimport { Todo } from '../../types/Todo';\n\ninterface Props {\n  todos: Todo[];\n  selectedTodo: Todo | null;\n  onSelect: (value: Todo | null) => void;\n}\n\nexport const TodoList: FC<Props> = ({\n  todos,\n  selectedTodo,\n  onSelect,\n}) => (\n  <table className=\"table is-narrow is-fullwidth\">\n    <thead>\n      <tr>\n        <th>#</th>\n        <th>\n          <span className=\"icon\">\n            <i className=\"fas fa-check\" />\n          </span>\n        </th>\n        <th>Title</th>\n        <th> </th>\n      </tr>\n    </thead>\n    <tbody>\n      {todos.map(todo => (\n        <TodoItem\n          todo={todo}\n          selectedTodo={selectedTodo}\n          onSelect={onSelect}\n          key={todo.id}\n        />\n      ))}\n    </tbody>\n  </table>\n);\n","import { FC } from 'react';\n\ninterface Props {\n  options: string[];\n  filter: string;\n  onSelect: (value: string) => void\n  searchValue: string;\n  onChange: (value: string) => void\n}\n\nexport const TodoFilter: FC<Props> = ({\n  options,\n  filter,\n  onSelect,\n  searchValue,\n  onChange,\n}) => {\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            value={filter}\n            data-cy=\"statusSelect\"\n            onChange={(e) => {\n              onSelect(e.target.value);\n            }}\n          >\n            {options.map(option => (\n              <option\n                value={option}\n                key={option}\n              >\n                {option}\n              </option>\n            ))}\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={searchValue}\n          onChange={(event) => {\n            onChange(event.target.value);\n          }}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n          {searchValue && (\n            <label>\n              {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n              <button\n                data-cy=\"clearSearchButton\"\n                type=\"button\"\n                className=\"delete\"\n                onClick={() => {\n                  onChange('');\n                }}\n              />\n            </label>\n          )}\n        </span>\n      </p>\n    </form>\n  );\n};\n","import { FC } from 'react';\nimport './Loader.scss';\n\nexport const Loader: FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\n// This function creates a promime\n// that is resolved after a given delay\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  // we add some delay to see now the laoder works\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","/* eslint-disable max-len */\nimport React, { useState, useEffect, useMemo } from 'react';\n\nimport { Todo } from './types/Todo';\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { getTodos } from './api';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nenum StateOfAffairs {\n  Active = 'active',\n  Completed = 'completed',\n}\n\nexport const filterOptions = ['all', 'active', 'completed'];\n\nexport const App: React.FC = () => {\n  const [todosFromServer, setTodosFromServer] = useState<Todo[]>([]);\n  const [selectedTodo, setSelectedTodo] = useState<Todo | null>(null);\n  const [filter, setFilter] = useState(filterOptions[0]);\n  const [searchValue, setSearchValue] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    setIsLoading(true);\n\n    const fetchData = async () => {\n      try {\n        const todos = await getTodos();\n\n        setTodosFromServer(todos);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    fetchData();\n  }, []);\n\n  const getVisibleTodos = useMemo(() => {\n    const validValue = searchValue.toLowerCase().trimStart();\n\n    const normalizeTitle = (item: string) => item\n      .toLowerCase().includes(validValue);\n\n    switch (filter) {\n      case StateOfAffairs.Active:\n        return todosFromServer.filter(todo => !todo.completed && normalizeTitle(todo.title));\n\n      case StateOfAffairs.Completed:\n        return todosFromServer.filter(todo => todo.completed && normalizeTitle(todo.title));\n\n      default:\n        return todosFromServer.filter(todo => normalizeTitle(todo.title));\n    }\n  }, [filter, todosFromServer, searchValue]);\n\n  const searchHandler = (value: string) => {\n    setSearchValue(value);\n  };\n\n  const selectHandler = (value: string) => {\n    setFilter(value);\n  };\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                options={filterOptions}\n                filter={filter}\n                onSelect={selectHandler}\n                searchValue={searchValue}\n                onChange={searchHandler}\n              />\n            </div>\n\n            <div className=\"block\">\n              {isLoading && <Loader />}\n              {!isLoading && todosFromServer.length > 0 ? (\n                <TodoList\n                  todos={getVisibleTodos}\n                  selectedTodo={selectedTodo}\n                  onSelect={setSelectedTodo}\n                />\n              ) : (\n                !isLoading && <p>No todos found.</p>\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {selectedTodo && (\n        <TodoModal\n          selectedTodo={selectedTodo}\n          onSelect={setSelectedTodo}\n        />\n      )}\n    </>\n  );\n};\n","import { FC, useState, useEffect } from 'react';\nimport { Loader } from '../Loader';\nimport { User } from '../../types/User';\nimport { getUser } from '../../api';\nimport { Todo } from '../../types/Todo';\n\ninterface Props {\n  selectedTodo: Todo;\n  onSelect: (todo: Todo | null) => void;\n}\n\nexport const TodoModal: FC<Props> = ({\n  selectedTodo,\n  onSelect,\n}) => {\n  const [user, setUser] = useState<User | null>(null);\n  const {\n    id,\n    userId,\n    completed,\n    title,\n  } = selectedTodo;\n\n  useEffect(() => {\n    if (userId) {\n      getUser(userId)\n        .then(setUser);\n    }\n  }, [selectedTodo.userId]);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {!user ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${id}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={() => {\n                onSelect(null);\n              }}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {!completed\n                ? <strong className=\"has-text-danger\">Planned</strong>\n                : <strong className=\"has-text-success\">Done</strong>}\n\n              <span>by</span>\n\n              <a href={user?.email}>\n                {user?.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}