{"version":3,"sources":["components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","api.ts","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["TodoList","todos","selectedTodo","setSelectedTodo","className","map","todo","id","completed","title","type","onClick","TodoFilter","options","filter","onSelect","searchValue","onChange","value","e","target","option","placeholder","event","style","pointerEvents","Loader","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","TodoModal","useState","user","setUser","userId","useEffect","getUser","href","email","name","filterOptions","App","todosFromServer","setTodosFromServer","setFilter","setSearchValue","validValue","toLowerCase","trimStart","normalizeTitle","item","includes","visibleTodos","useMemo","length","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.850a1849.chunk.js","sourcesContent":["import React from 'react';\nimport { Todo } from '../../types/Todo';\n\ninterface Props {\n  todos: Todo[];\n  selectedTodo: Todo | null;\n  setSelectedTodo: (value: Todo | null) => void;\n}\n\nexport const TodoList: React.FC<Props> = ({\n  todos, selectedTodo, setSelectedTodo,\n}) => (\n  <table className=\"table is-narrow is-fullwidth\">\n    <thead>\n      <tr>\n        <th>#</th>\n        <th>\n          <span className=\"icon\">\n            <i className=\"fas fa-check\" />\n          </span>\n        </th>\n        <th>Title</th>\n        <th> </th>\n      </tr>\n    </thead>\n    <tbody>\n      {todos.map(todo => (\n        <tr\n          data-cy=\"todo\"\n          className={selectedTodo && selectedTodo.id === todo.id\n            ? 'has-background-info-light'\n            : ''}\n          key={todo.id}\n        >\n          <td className=\"is-vcentered\">{todo.id}</td>\n          <td className=\"is-vcentered\">\n            {todo.completed && (\n              <span className=\"icon\" data-cy=\"iconCompleted\">\n                <i className=\"fas fa-check\" />\n              </span>\n            )}\n          </td>\n          <td className=\"is-vcentered is-expanded\">\n            <p className={todo.completed\n              ? 'has-text-success' : 'has-text-danger'}\n            >\n              {todo.title}\n            </p>\n          </td>\n          <td className=\"has-text-right is-vcentered\">\n            <button\n              data-cy=\"selectButton\"\n              className=\"button\"\n              type=\"button\"\n              onClick={() => {\n                setSelectedTodo(todo);\n              }}\n            >\n              <span className=\"icon\">\n                {selectedTodo && selectedTodo.id === todo.id ? (\n                  <i className=\"far fa-eye-slash\" />\n                ) : (\n                  <i className=\"far fa-eye\" />\n                )}\n              </span>\n            </button>\n          </td>\n        </tr>\n      ))}\n    </tbody>\n  </table>\n);\n","import React from 'react';\n\ninterface Props {\n  options: string[];\n  filter: string;\n  onSelect: (value: string) => void\n  searchValue: string;\n  onChange: (value: string) => void\n}\n\nexport const TodoFilter: React.FC<Props> = ({\n  options,\n  filter,\n  onSelect,\n  searchValue,\n  onChange,\n}) => {\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            value={filter}\n            data-cy=\"statusSelect\"\n            onChange={(e) => {\n              onSelect(e.target.value);\n            }}\n          >\n            {options.map(option => (\n              <option\n                value={option}\n                key={option}\n              >\n                {option}\n              </option>\n            ))}\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={searchValue}\n          onChange={(event) => {\n            onChange(event.target.value);\n          }}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n          {searchValue && (\n            <label>\n              {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n              <button\n                data-cy=\"clearSearchButton\"\n                type=\"button\"\n                className=\"delete\"\n                onClick={() => {\n                  onChange('');\n                }}\n              />\n            </label>\n          )}\n        </span>\n      </p>\n    </form>\n  );\n};\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\n// This function creates a promime\n// that is resolved after a given delay\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  // we add some delay to see now the laoder works\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React, { useState, useEffect } from 'react';\nimport { Loader } from '../Loader';\nimport { User } from '../../types/User';\nimport { getUser } from '../../api';\nimport { Todo } from '../../types/Todo';\n\ninterface Props {\n  selectedTodo: Todo;\n  setSelectedTodo: (todo: Todo | null) => void;\n}\n\nexport const TodoModal: React.FC<Props> = ({\n  selectedTodo,\n  setSelectedTodo,\n}) => {\n  const [user, setUser] = useState<User | null>(null);\n  const {\n    id,\n    userId,\n    completed,\n    title,\n  } = selectedTodo;\n\n  useEffect(() => {\n    if (userId) {\n      getUser(userId)\n        .then(setUser);\n    }\n  }, [selectedTodo.userId]);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {!user ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${id}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={() => {\n                setSelectedTodo(null);\n              }}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {/* <strong className=\"has-text-success\">Done</strong> */}\n              {!completed\n                ? <strong className=\"has-text-danger\">Planned</strong>\n                : <strong className=\"has-text-success\">Done</strong>}\n\n              {' by '}\n\n              <a href={user?.email}>\n                {user?.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useState, useEffect, useMemo } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport { Todo } from './types/Todo';\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { getTodos } from './api';\n\nexport const filterOptions = ['all', 'active', 'completed'];\n\nexport const App: React.FC = () => {\n  const [todosFromServer, setTodosFromServer] = useState<Todo[]>([]);\n  const [selectedTodo, setSelectedTodo] = useState<Todo | null>(null);\n  const [filter, setFilter] = useState(filterOptions[0]);\n  const [searchValue, setSearchValue] = useState('');\n\n  const validValue = searchValue.toLowerCase().trimStart();\n\n  const normalizeTitle = (item: string) => item\n    .toLowerCase().includes(validValue);\n\n  useEffect(() => {\n    getTodos()\n      .then(setTodosFromServer);\n  }, []);\n\n  const getVisibleTodos = () => {\n    switch (filter) {\n      case 'active':\n        return todosFromServer.filter(todo => !todo.completed && normalizeTitle(todo.title));\n\n      case 'completed':\n        return todosFromServer.filter(todo => todo.completed && normalizeTitle(todo.title));\n\n      default:\n        return todosFromServer.filter(todo => normalizeTitle(todo.title));\n    }\n  };\n\n  const visibleTodos = useMemo(\n    getVisibleTodos,\n    [filter, todosFromServer, searchValue],\n  );\n\n  const searchHandler = (value: string) => {\n    setSearchValue(value);\n  };\n\n  const selectHandler = (value: string) => {\n    setFilter(value);\n  };\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                options={filterOptions}\n                filter={filter}\n                onSelect={selectHandler}\n                searchValue={searchValue}\n                onChange={searchHandler}\n              />\n            </div>\n\n            <div className=\"block\">\n              {todosFromServer.length > 0\n                ? (\n                  <TodoList\n                    todos={visibleTodos}\n                    selectedTodo={selectedTodo}\n                    setSelectedTodo={setSelectedTodo}\n\n                  />\n                )\n                : (\n                  <Loader />\n                )}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {selectedTodo && (\n        <TodoModal\n          selectedTodo={selectedTodo}\n          setSelectedTodo={setSelectedTodo}\n        />\n      )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}